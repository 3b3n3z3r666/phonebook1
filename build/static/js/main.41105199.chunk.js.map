{"version":3,"sources":["components/SearchField.js","components/SearchResult.js","components/NameField.js","components/NumberField.js","components/AddContactForm.js","components/ContactList.js","components/services/contacts.js","components/Notification.js","components/App.js","index.js"],"names":["SearchField","props","onChange","handleChange","searchName","SearchResult","searchResult","name","number","NameField","value","NumberField","AddContactForm","onSubmit","handleContactSubmit","handleNameFieldChange","nameValue","handleNumberFieldChange","numberValue","type","ContactList","deleteButtonStyle","contacts","map","contact","id","style","onClick","console","log","handleDelete","split","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","msg","showSearchResults","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","setSearchName","searchResults","setSearchResults","notification","setNotification","useEffect","contactsService","initialContacts","updatePhoneNumber","contactName","contactNumber","contactToUpdate","filter","person","String","updatedContact","returnedPerson","oldPersons","concat","event","target","searchMatch","includes","matches","toLowerCase","length","preventDefault","newNameObject","newNumberObject","alert","duplicate","i","checkforName","window","confirm","setTimeout","personIds","parseInt","maxIdNum","Math","max","newPersonId","newPerson","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41105199.chunk.js","sourcesContent":["\n\nconst SearchField = (props) =>{\n    return(\n        <div>\n            Search: <input onChange={props.handleChange}></input>\n            <h3>Searching for: {props.searchName}</h3>\n        </div>\n    )\n}\nexport default SearchField;","const SearchResult = (props) => {\n    return(\n        <div>\n            \n            <p>{props.searchResult.name} {props.searchResult.number}</p>\n        </div>\n    )\n}\nexport default SearchResult;","const NameField = (props) => {\n    return(\n        <div>\n            Name: <input onChange={props.handleChange} value={props.value}></input>\n            \n        </div>\n    )\n}\n\nexport default NameField;","const NumberField = (props) => {\n    return(\n        <div>\n            Number: <input onChange={props.handleChange} value={props.value}></input>\n        </div>\n    )\n}\n\nexport default NumberField;","import NameField from \"./NameField\"\nimport NumberField from \"./NumberField\"\n\n\nconst AddContactForm = (props) =>{\n    return(\n        <div>\n            <form onSubmit={props.handleContactSubmit}>\n            <NameField handleChange={props.handleNameFieldChange} value={props.nameValue} />\n            <NumberField handleChange={props.handleNumberFieldChange} value={props.numberValue} />\n            <button type=\"submit\" >add</button>\n            </form>\n        </div>\n    )\n}\n\n\nexport default AddContactForm;","const ContactList = (props) => {\n    // console.log(\"ContactList props: \", props);\n    // console.log(\"ContactList contacts\", props.contacts);\n    \n    // props.contacts.map(contact => console.log('Map: ',contact.name, ' ', contact.number))\n\n    const handleDelete = (id) =>{\n        console.log(\"ContactList handleDelete called on ID: \", id)\n        props.handleDelete(id);\n    }\n    const deleteButtonStyle = {\n                                // textAlign: \"left\",\n                                // position: \"absolute\",\n                                // right:\"50%\",\n                                // width:\"10%\",\n                                // borderRadius:\"5px\"\n                                // float: \"right\",\n};\n\n    return(\n        <div>\n            {props.contacts.map((contact) => {\n                return (<div> <p key={contact.id}>ID: {contact.id} {contact.name} {contact.number}<button style={deleteButtonStyle} onClick={() => handleDelete(contact.id)}>Delete<br></br>{contact.name.split(' ')[0]}?</button></p></div>)} )}</div>\n    )\n}\n\nexport default ContactList;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n}; \n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n};\n\nconst update = (id, newObject) => {\n    console.log(\"UPDATE:\\nParams are: ID: \", id, \" object: \", newObject)\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n};\n\n\nconst deleteEntry = (id) =>{\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n};\n\nexport default { getAll, create, update, deleteEntry };","const Notification = (props) => {\n    return(\n        <div>\n            <h3> Notification: {props.msg}</h3>\n        </div>\n    )\n};\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\n\n// components\nimport SearchField from \"./SearchField\"\nimport SearchResult from \"./SearchResult\"\nimport AddContactForm from \"./AddContactForm\"\nimport ContactList from \"./ContactList\"\nimport contactsService from \"./services/contacts\";\nimport Notification from \"./Notification\"\n\nvar showSearchResults=false;\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [searchName, setSearchName] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const [notification, setNotification] = useState(null);\n\n  // useEffect(() => {\n  //   console.log('useEffect called')\n  //   axios\n  //     .get('http://localhost:3001/persons')\n  //     .then(response => {\n  //       console.log('promise fulfilled')\n  //       setPersons(response.data)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    console.log(\"service useEffect called\")\n    contactsService.getAll().then(initialContacts => {\n      console.log(\"initial contacts: \", initialContacts)\n      setPersons(initialContacts)   \n    })\n  }, []);\n\n\n\n  // getFilteredContacts = () => persons.filter(contact => contact.name.includes(this.state.searchName)\n  // this.getFilteredContacts().map(contact =>\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  };\n\n  const handleSearchChange = (event) =>{\n    console.log(\"searching for: \", event.target.value)\n    persons.map(person => console.log(\"persons:\", person.name))\n    var searchMatch = persons.filter(person => person.name.includes(event.target.value))\n    console.log(\"search match is: \", searchMatch)\n    if(event.target.value ===''){\n      showSearchResults = false;\n      setSearchName('');\n      console.log(\"search is empty\")\n    }else{\n    console.log(\"searchName update: \", event.target.value)\n    setSearchName(event.target.value);\n    var matches = persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()));\n    if (matches.length === 0){\n      setSearchResults([{name:\"No matches\", number:\"\"}])\n    }else{\n      setSearchResults(matches);\n      showSearchResults=true;\n    }\n    }\n  };\n\n\n\n  const checkforName = (name) =>{\n    console.log(\"checking for \", name.name);\n    var duplicate = false;\n    for(let i=0; i<persons.length; i++){\n      console.log(\"contact \", persons[i].name, \"newName\", name.name)\n      if(persons[i].name.toLowerCase() === name.name.toLowerCase()){\n        duplicate = true;\n        break\n      }\n    }\n    return duplicate;\n  };\n\n  const rejectName = (name) => {\n    console.log(name.name, \" rejected\")\n    setNotification(`${name.name.toLowerCase()}'s entry was left alone`)\n          setTimeout(() => {\n            setNotification(null)}, 3000)\n    setNewName('')\n  };\n\n  const handleSubmit = (event) =>{\n    event.preventDefault();\n    var newNameObject = {name:newName}\n    var newNumberObject = {number:newNumber}\n    console.log(\"-Submission-  newNameObject: \", newNameObject, \" newNumberObject\", newNumberObject)\n\n    if(newName=== '' || newNumber.length !== 10){\n      alert(\"Please enter a valid name and number first\")\n      setNewName('')\n      setNewNumber('')\n    }else{\n      var updateNum = false;\n      if (checkforName(newNameObject)){\n        if(window.confirm(`${newNameObject.name.toLowerCase()} already exists! Do you want to update ${newNameObject.name.toLowerCase()}'s phone number?`)){\n          updatePhoneNumber(newNameObject, newNumberObject)\n        }else{\n          rejectName(newNameObject)\n        }\n      }else{\n        let personIds = persons.map(person => parseInt(person.id));\n        let maxIdNum = Math.max(...personIds);\n        let newPersonId = String(maxIdNum+1)\n        let newPerson = {name: newName, number: newNumber, id: newPersonId};\n        console.log(\"Submit registered\", \"newName: \", newNameObject, \"newNumber: \", newNumber, \"maxIdNum: \", maxIdNum, \"MaxIdNum+1\", maxIdNum + 1);\n        console.log(\"Person built: \", newPerson, \" ID: \", newPerson.id, \" Name: \", newPerson.name, \" Number: \", newPerson.number); \n        contactsService.create(newPerson).then(returnedPerson =>{\n          setPersons(persons.concat(returnedPerson))\n          setNotification(`${newName} added!`)\n          setTimeout(() => {\n            setNotification(null)}, 3000)\n          setNewName('');\n          setNewNumber('');\n          })\n      }\n    }\n  };\n\n\n  const updatePhoneNumber = (contactName, contactNumber) =>{\n    console.log(\"-UpdatePhoneNumberProps-\", contactName, \"peops name\", contactName.name, \"props number\", contactNumber.number)\n    var contactToUpdate = persons.filter(person => person.name === String(contactName.name));\n    if(contactToUpdate[0]){\n      console.log(\"Found a contactToUpdate: \", contactToUpdate[0], contactToUpdate[0].name, contactToUpdate[0].number, contactToUpdate[0].id)\n      var updatedContact = {name: contactName.name, number: contactNumber.number}\n      contactsService.update(contactToUpdate[0].id, updatedContact).then(returnedPerson =>{\n        var oldPersons = persons.filter(person => person.id !== returnedPerson.id)\n        setPersons(oldPersons.concat(returnedPerson))\n        setNewName('');\n        setNewNumber('');\n      })\n    }\n  };\n  \n  const deleteEntry = (id) =>{\n    console.log('Delete called on id: ', id);\n    console.log(\"ID\", id, \"'s name is: \", persons.filter(person => person.id === id)[0].name)\n    var personToDelete = persons.filter(person => person.id === id)[0]\n    console.log(\"personToDelete: \", personToDelete)\n    if(window.confirm(`Are you sure you want to delete ${personToDelete.name}`)){\n      contactsService.deleteEntry(id);\n      setPersons(persons.filter(person => person.id !== id));\n      setSearchResults([])\n      setNotification(`${personToDelete.name} removed!`)\n          setTimeout(() => {\n            setNotification(null)}, 3000)\n    }else{\n      window.alert(\"OK. No contacts deleted.\")}\n    \n  };\n\n\n\n\n  return (\n    <div>\n      {notification != null ? <Notification msg={notification} /> : <h3></h3> }\n      <h2>Phonebook</h2>\n      {/* <div>\n        Search: <input onChange={handleSearchChange} value={searchName}/>\n        <h3>Searching for: {searchName}</h3>\n      </div> */}\n\n      <SearchField handleChange={handleSearchChange} searchName={searchName}/>\n\n\n      <AddContactForm \n        handleContactSubmit={handleSubmit} \n        handleNameFieldChange={handleNameChange}\n        nameValue={newName}\n        handleNumberFieldChange={handleNumberChange}\n        numberValue={newNumber}\n      />\n\n      {/* <form onSubmit={handleSubmit}>\n        <div>\n          name: <input onChange={handleNameChange} value={newName} type=\"tel\"/>\n        </div>\n        <div>\n          number: <input onChange={handleNumberChange} value={newNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form> */}\n\n      <div>newName is currently: {newName}</div>\n\n      <h2>Contacts</h2>\n      <button onClick={() => setShowAll(!showAll)}>Show/Hide Phonebook</button>\n\n      {showAll === true ? \n      <ContactList contacts={persons} handleDelete={deleteEntry}/> :\n      <div> <h3>Contacts Hidden</h3> </div>}\n      \n      <h2>Search Results</h2>\n        {showSearchResults === true ? \n        searchResults.map(searchResult =>  \n        <SearchResult searchResult={searchResult} />):\n        <div></div> }\n      \n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}